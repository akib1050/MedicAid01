@model MedicAid01.Models.Doctor

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_CustomLayout.cshtml";
    var sameEmail = ViewBag.SameEmail;
}

@Styles.Render("~/Content/css")

<!DOCTYPE html>
<html>
<head>

    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700" rel="stylesheet">
    <style>
        html, body {
            min-height: 100%;
        }

        body, div, form, input, select, p {
            padding: 0;
            margin: 0;
            outline: none;
            font-family: Roboto, Arial, sans-serif;
            font-size: 16px;
            color: black;
        }

        body {
            /*background: url("~/Content/img/10130.jpg") no-repeat center;*/
            background-size: cover;
        }

        h1, h2 {
            text-transform: uppercase;
            font-weight: 400;
        }

        h2 {
            margin: 0 0 0 8px;
        }

        .main-block {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 25px;
            padding-top: 80px;
            background: rgba(0, 0, 0, 0.5);
            background-image: url('/Content/assets/img/bg_image_2.jpeg');
            background-repeat: no-repeat;
            background-size: cover;
        }

        .left-part, form {
            padding: 25px;
        }

        .left-part {
            text-align: center;
        }

        .fa-graduation-cap {
            font-size: 72px;
        }

        form {
            background: rgba(222,224,230,0.78);
        }

        .title {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

        .info {
            display: flex;
            flex-direction: column;
        }

        input, select {
            padding: 5px;
            margin-bottom: 30px;
            background: transparent;
            border: none;
            border-bottom: 1px solid #eee;
        }

            input::placeholder {
                color: black;
            }

        option:focus {
            border: none;
        }

        option {
            background: black;
            border: none;
        }

        .checkbox input {
            margin: 0 10px 0 0;
            vertical-align: middle;
        }

        .checkbox a {
            color: black;
        }

            .checkbox a:hover {
                color: black;
            }

        .btn-item, button {
            padding: 10px 5px;
            margin-top: 20px;
            border-radius: 5px;
            border: none;
            background: #26a9e0;
            text-decoration: none;
            font-size: 15px;
            font-weight: 400;
            color: #fff;
        }

        .btn-item {
            display: inline-block;
            margin: 20px 5px 0;
        }

        button {
            width: 100%;
        }

            button:hover, .btn-item:hover {
                background: #85d6de;
            }

        @@media (min-width: 568px) {
            html, body {
                height: 100%;
            }

            .main-block {
                flex-direction: row;
                height: 800px;
            }

            .left-part, form {
                flex: 1;
                height: auto;
            }
        }
    </style>
</head>
<body>


    <div class="navbar navbar-inverse navbar-fixed-top" style="background-color: rgb(30, 50, 83)">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("MedicAid", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Administrator", "LogIn", "Administrators1")</li>
                    <li>@Html.ActionLink("Doctor", "LogIn", "Doctors1")</li>
                    <li>@Html.ActionLink("Patient", "LogIn", "Patients1")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>

    <br><br>
    <div class="main-block">
        <div class="left-part">

        </div>
        <form action="Create" method="post">
            @Html.AntiForgeryToken()
            <div class="title">
                <i class="fas fa-pencil-alt"></i>
                <h1 style="color:black">Register here</h1>
            </div>
            <div class="info">
                <input class="fname" type="text" name="DoctorFirstName" placeholder="First name">
                @Html.ValidationMessageFor(model => model.DoctorFirstName, "", new { @class = "text-danger" })
                <input class="fname" type="text" name="DoctorLastName" placeholder="Last name">
                @Html.ValidationMessageFor(model => model.DoctorLastName, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.Specialize, htmlAttributes: new { @class = "" })
                @Html.DropDownListFor(model => model.Specialize, new SelectList(ViewBag.list), "Select Your Specialized Field", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Specialize, "", new { @class = "text-danger" })
                <input type="email" name="Email" placeholder="Email">
                @if (sameEmail != null)
                {
                    <p class="text-danger">@sameEmail</p>
                }
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                <input type="text" name="DoctorPhoneNo" placeholder="Phone number">
                @Html.ValidationMessageFor(model => model.DoctorPhoneNo, "", new { @class = "text-danger" })
                <input type="password" name="Password" placeholder="Password">
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

            </div>
            <button type="submit">Submit</button>
        </form>
    </div>
</body>
</html>
